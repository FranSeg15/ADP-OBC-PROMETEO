
Scheduler_AtmelStudio.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  00000614  000006a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000614  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000240  00800112  00800112  000006ba  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006ba  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  0000072c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002095  00000000  00000000  0000085c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001236  00000000  00000000  000028f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008a8  00000000  00000000  00003b27  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000340  00000000  00000000  000043d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b0b  00000000  00000000  00004710  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009f1  00000000  00000000  0000521b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  00005c0c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 35 00 	jmp	0x6a	; 0x6a <__ctors_end>
   4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 23 01 	jmp	0x246	; 0x246 <__vector_16>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

00000068 <__ctors_start>:
  68:	87 01       	movw	r16, r14

0000006a <__ctors_end>:
  6a:	11 24       	eor	r1, r1
  6c:	1f be       	out	0x3f, r1	; 63
  6e:	cf ef       	ldi	r28, 0xFF	; 255
  70:	d8 e0       	ldi	r29, 0x08	; 8
  72:	de bf       	out	0x3e, r29	; 62
  74:	cd bf       	out	0x3d, r28	; 61

00000076 <__do_copy_data>:
  76:	11 e0       	ldi	r17, 0x01	; 1
  78:	a0 e0       	ldi	r26, 0x00	; 0
  7a:	b1 e0       	ldi	r27, 0x01	; 1
  7c:	e4 e1       	ldi	r30, 0x14	; 20
  7e:	f6 e0       	ldi	r31, 0x06	; 6
  80:	02 c0       	rjmp	.+4      	; 0x86 <__do_copy_data+0x10>
  82:	05 90       	lpm	r0, Z+
  84:	0d 92       	st	X+, r0
  86:	a2 31       	cpi	r26, 0x12	; 18
  88:	b1 07       	cpc	r27, r17
  8a:	d9 f7       	brne	.-10     	; 0x82 <__do_copy_data+0xc>

0000008c <__do_clear_bss>:
  8c:	23 e0       	ldi	r18, 0x03	; 3
  8e:	a2 e1       	ldi	r26, 0x12	; 18
  90:	b1 e0       	ldi	r27, 0x01	; 1
  92:	01 c0       	rjmp	.+2      	; 0x96 <.do_clear_bss_start>

00000094 <.do_clear_bss_loop>:
  94:	1d 92       	st	X+, r1

00000096 <.do_clear_bss_start>:
  96:	a2 35       	cpi	r26, 0x52	; 82
  98:	b2 07       	cpc	r27, r18
  9a:	e1 f7       	brne	.-8      	; 0x94 <.do_clear_bss_loop>

0000009c <__do_global_ctors>:
  9c:	10 e0       	ldi	r17, 0x00	; 0
  9e:	c5 e3       	ldi	r28, 0x35	; 53
  a0:	d0 e0       	ldi	r29, 0x00	; 0
  a2:	04 c0       	rjmp	.+8      	; 0xac <__do_global_ctors+0x10>
  a4:	21 97       	sbiw	r28, 0x01	; 1
  a6:	fe 01       	movw	r30, r28
  a8:	0e 94 02 03 	call	0x604	; 0x604 <__tablejump2__>
  ac:	c4 33       	cpi	r28, 0x34	; 52
  ae:	d1 07       	cpc	r29, r17
  b0:	c9 f7       	brne	.-14     	; 0xa4 <__do_global_ctors+0x8>
  b2:	0e 94 a6 00 	call	0x14c	; 0x14c <main>
  b6:	0c 94 08 03 	jmp	0x610	; 0x610 <_exit>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <_ZN3LED3runEv>:
}

SchedulerTypes::ErrorCodes LED::run()
{
    // - Toggle the pin, assuming PORTB
    PORTB = PORTB ^ (0x01 << m_u8Pin);
  be:	45 b1       	in	r20, 0x05	; 5
  c0:	21 e0       	ldi	r18, 0x01	; 1
  c2:	30 e0       	ldi	r19, 0x00	; 0
  c4:	fc 01       	movw	r30, r24
  c6:	07 80       	ldd	r0, Z+7	; 0x07
  c8:	02 c0       	rjmp	.+4      	; 0xce <_ZN3LED3runEv+0x10>
  ca:	22 0f       	add	r18, r18
  cc:	33 1f       	adc	r19, r19
  ce:	0a 94       	dec	r0
  d0:	e2 f7       	brpl	.-8      	; 0xca <_ZN3LED3runEv+0xc>
  d2:	24 27       	eor	r18, r20
  d4:	25 b9       	out	0x05, r18	; 5
    return(SchedulerTypes::NO_ERR);
}
  d6:	80 e0       	ldi	r24, 0x00	; 0
  d8:	08 95       	ret

000000da <_ZN3LED5setupEv>:

SchedulerTypes::ErrorCodes LED::setup()
{
  da:	fc 01       	movw	r30, r24
    // ****************************
    //         PORT CONFIG
    // ****************************
    // - Set the correct direction
    // for the pin
    DDRB = DDRB | (0x01 << m_u8Pin);
  dc:	84 b1       	in	r24, 0x04	; 4
  de:	21 e0       	ldi	r18, 0x01	; 1
  e0:	30 e0       	ldi	r19, 0x00	; 0
  e2:	a9 01       	movw	r20, r18
  e4:	07 80       	ldd	r0, Z+7	; 0x07
  e6:	02 c0       	rjmp	.+4      	; 0xec <_ZN3LED5setupEv+0x12>
  e8:	44 0f       	add	r20, r20
  ea:	55 1f       	adc	r21, r21
  ec:	0a 94       	dec	r0
  ee:	e2 f7       	brpl	.-8      	; 0xe8 <_ZN3LED5setupEv+0xe>
  f0:	48 2b       	or	r20, r24
  f2:	44 b9       	out	0x04, r20	; 4
    // - Init the pin to 0
    PORTB = PORTB & (~(0x01 << m_u8Pin));
  f4:	95 b1       	in	r25, 0x05	; 5
  f6:	07 80       	ldd	r0, Z+7	; 0x07
  f8:	02 c0       	rjmp	.+4      	; 0xfe <_ZN3LED5setupEv+0x24>
  fa:	22 0f       	add	r18, r18
  fc:	33 1f       	adc	r19, r19
  fe:	0a 94       	dec	r0
 100:	e2 f7       	brpl	.-8      	; 0xfa <_ZN3LED5setupEv+0x20>
 102:	20 95       	com	r18
 104:	29 23       	and	r18, r25
 106:	25 b9       	out	0x05, r18	; 5

    return(SchedulerTypes::NO_ERR);
}
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	08 95       	ret

0000010c <_ZN3LEDC1Eh>:
#include "LED.hpp"

LED::LED(SchedulerTypes::UInt8 i_u8Pin)
 10c:	1f 93       	push	r17
 10e:	cf 93       	push	r28
 110:	df 93       	push	r29
 112:	ec 01       	movw	r28, r24
 114:	16 2f       	mov	r17, r22
 116:	0e 94 cc 02 	call	0x598	; 0x598 <_ZN4TaskC1Ev>
 11a:	86 e0       	ldi	r24, 0x06	; 6
 11c:	91 e0       	ldi	r25, 0x01	; 1
 11e:	99 83       	std	Y+1, r25	; 0x01
 120:	88 83       	st	Y, r24
{
	m_u8Pin = i_u8Pin;
 122:	1f 83       	std	Y+7, r17	; 0x07
}
 124:	df 91       	pop	r29
 126:	cf 91       	pop	r28
 128:	1f 91       	pop	r17
 12a:	08 95       	ret

0000012c <_ZN7Mailbox10getMailboxEv>:

extern "C"
{
    Mailbox* Mailbox::getMailbox()
    {
        if(MailObj == 0)
 12c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_ZN7Mailbox7MailObjE>
 130:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_ZN7Mailbox7MailObjE+0x1>
 134:	00 97       	sbiw	r24, 0x00	; 0
 136:	09 f4       	brne	.+2      	; 0x13a <_ZN7Mailbox10getMailboxEv+0xe>
 138:	ff cf       	rjmp	.-2      	; 0x138 <_ZN7Mailbox10getMailboxEv+0xc>
        {
            while(1){};
        }

        return MailObj;
    }
 13a:	08 95       	ret

0000013c <_Z5Setupv>:

	// ****************************
	//       TIMER CONFIG
	// ****************************
	// - Disable interrupts
	cli();
 13c:	f8 94       	cli
	// - Configure Timer0 with
	// Division by 8, enable the
	// interrupt
	TCCR0B = CLK_DIVIDER_BY_8;
 13e:	82 e0       	ldi	r24, 0x02	; 2
 140:	85 bd       	out	0x25, r24	; 37
	TIMSK0 = T0_OVRF_IE;
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
	// - Re-enable interrupts
	sei();
 148:	78 94       	sei
 14a:	08 95       	ret

0000014c <main>:

// #########################
//          MAIN
// #########################
int main(void)
{
 14c:	cf 93       	push	r28
 14e:	df 93       	push	r29
 150:	cd b7       	in	r28, 0x3d	; 61
 152:	de b7       	in	r29, 0x3e	; 62
 154:	60 97       	sbiw	r28, 0x10	; 16
 156:	0f b6       	in	r0, 0x3f	; 63
 158:	f8 94       	cli
 15a:	de bf       	out	0x3e, r29	; 62
 15c:	0f be       	out	0x3f, r0	; 63
 15e:	cd bf       	out	0x3d, r28	; 61
    // - Instantiate two new Tasks
    LED OnBoardLED(5);
 160:	65 e0       	ldi	r22, 0x05	; 5
 162:	ce 01       	movw	r24, r28
 164:	01 96       	adiw	r24, 0x01	; 1
 166:	0e 94 86 00 	call	0x10c	; 0x10c <_ZN3LEDC1Eh>
    LED RedLED(0);
 16a:	60 e0       	ldi	r22, 0x00	; 0
 16c:	ce 01       	movw	r24, r28
 16e:	09 96       	adiw	r24, 0x09	; 9
 170:	0e 94 86 00 	call	0x10c	; 0x10c <_ZN3LEDC1Eh>
    // - Run the overall setup function for the system
    Setup();
 174:	0e 94 9e 00 	call	0x13c	; 0x13c <_Z5Setupv>
    // - Attach the Tasks to the Scheduler;
    g_MainScheduler.attach(&OnBoardLED,TaskType_Periodic, TaskActiveTrue,1000);
 178:	0f 2e       	mov	r0, r31
 17a:	f8 ee       	ldi	r31, 0xE8	; 232
 17c:	af 2e       	mov	r10, r31
 17e:	f0 2d       	mov	r31, r0
 180:	0f 2e       	mov	r0, r31
 182:	f3 e0       	ldi	r31, 0x03	; 3
 184:	bf 2e       	mov	r11, r31
 186:	f0 2d       	mov	r31, r0
 188:	c1 2c       	mov	r12, r1
 18a:	d1 2c       	mov	r13, r1
 18c:	e1 2c       	mov	r14, r1
 18e:	f1 2c       	mov	r15, r1
 190:	00 e0       	ldi	r16, 0x00	; 0
 192:	10 e0       	ldi	r17, 0x00	; 0
 194:	21 e0       	ldi	r18, 0x01	; 1
 196:	42 e0       	ldi	r20, 0x02	; 2
 198:	be 01       	movw	r22, r28
 19a:	6f 5f       	subi	r22, 0xFF	; 255
 19c:	7f 4f       	sbci	r23, 0xFF	; 255
 19e:	8a e7       	ldi	r24, 0x7A	; 122
 1a0:	91 e0       	ldi	r25, 0x01	; 1
 1a2:	0e 94 a6 01 	call	0x34c	; 0x34c <_ZN9Scheduler6attachEP4Task8TaskType10TaskActivey>
    g_MainScheduler.attach(&RedLED, TaskType_Periodic,TaskActiveFalse,500);
 1a6:	0f 2e       	mov	r0, r31
 1a8:	f4 ef       	ldi	r31, 0xF4	; 244
 1aa:	af 2e       	mov	r10, r31
 1ac:	f0 2d       	mov	r31, r0
 1ae:	bb 24       	eor	r11, r11
 1b0:	b3 94       	inc	r11
 1b2:	20 e0       	ldi	r18, 0x00	; 0
 1b4:	42 e0       	ldi	r20, 0x02	; 2
 1b6:	be 01       	movw	r22, r28
 1b8:	67 5f       	subi	r22, 0xF7	; 247
 1ba:	7f 4f       	sbci	r23, 0xFF	; 255
 1bc:	8a e7       	ldi	r24, 0x7A	; 122
 1be:	91 e0       	ldi	r25, 0x01	; 1
 1c0:	0e 94 a6 01 	call	0x34c	; 0x34c <_ZN9Scheduler6attachEP4Task8TaskType10TaskActivey>
    // - Run the Setup for the scheduler and all tasks
    g_MainScheduler.setup();
 1c4:	8a e7       	ldi	r24, 0x7A	; 122
 1c6:	91 e0       	ldi	r25, 0x01	; 1
 1c8:	0e 94 a7 02 	call	0x54e	; 0x54e <_ZN9Scheduler5setupEv>
    // - Main Loop
    while(1)
    {
    	g_MainScheduler.Sleep();
 1cc:	8a e7       	ldi	r24, 0x7A	; 122
 1ce:	91 e0       	ldi	r25, 0x01	; 1
 1d0:	0e 94 c4 02 	call	0x588	; 0x588 <_ZN9Scheduler5SleepEv>
        if(g_SystemTicks != g_MainScheduler.m_u64ticks)
 1d4:	a0 90 49 03 	lds	r10, 0x0349	; 0x800349 <_ZL13g_SystemTicks>
 1d8:	b0 90 4a 03 	lds	r11, 0x034A	; 0x80034a <_ZL13g_SystemTicks+0x1>
 1dc:	c0 90 4b 03 	lds	r12, 0x034B	; 0x80034b <_ZL13g_SystemTicks+0x2>
 1e0:	d0 90 4c 03 	lds	r13, 0x034C	; 0x80034c <_ZL13g_SystemTicks+0x3>
 1e4:	e0 90 4d 03 	lds	r14, 0x034D	; 0x80034d <_ZL13g_SystemTicks+0x4>
 1e8:	f0 90 4e 03 	lds	r15, 0x034E	; 0x80034e <_ZL13g_SystemTicks+0x5>
 1ec:	00 91 4f 03 	lds	r16, 0x034F	; 0x80034f <_ZL13g_SystemTicks+0x6>
 1f0:	10 91 50 03 	lds	r17, 0x0350	; 0x800350 <_ZL13g_SystemTicks+0x7>
 1f4:	ea e7       	ldi	r30, 0x7A	; 122
 1f6:	f1 e0       	ldi	r31, 0x01	; 1
 1f8:	20 81       	ld	r18, Z
 1fa:	31 81       	ldd	r19, Z+1	; 0x01
 1fc:	42 81       	ldd	r20, Z+2	; 0x02
 1fe:	53 81       	ldd	r21, Z+3	; 0x03
 200:	64 81       	ldd	r22, Z+4	; 0x04
 202:	75 81       	ldd	r23, Z+5	; 0x05
 204:	86 81       	ldd	r24, Z+6	; 0x06
 206:	97 81       	ldd	r25, Z+7	; 0x07
 208:	0e 94 ed 02 	call	0x5da	; 0x5da <__cmpdi2>
 20c:	f9 f2       	breq	.-66     	; 0x1cc <main+0x80>
        {
            //- Only execute the tasks if one tick has passed.
            g_MainScheduler.m_u64ticks = g_SystemTicks;
 20e:	70 91 49 03 	lds	r23, 0x0349	; 0x800349 <_ZL13g_SystemTicks>
 212:	60 91 4a 03 	lds	r22, 0x034A	; 0x80034a <_ZL13g_SystemTicks+0x1>
 216:	50 91 4b 03 	lds	r21, 0x034B	; 0x80034b <_ZL13g_SystemTicks+0x2>
 21a:	40 91 4c 03 	lds	r20, 0x034C	; 0x80034c <_ZL13g_SystemTicks+0x3>
 21e:	30 91 4d 03 	lds	r19, 0x034D	; 0x80034d <_ZL13g_SystemTicks+0x4>
 222:	20 91 4e 03 	lds	r18, 0x034E	; 0x80034e <_ZL13g_SystemTicks+0x5>
 226:	90 91 4f 03 	lds	r25, 0x034F	; 0x80034f <_ZL13g_SystemTicks+0x6>
 22a:	80 91 50 03 	lds	r24, 0x0350	; 0x800350 <_ZL13g_SystemTicks+0x7>
 22e:	70 83       	st	Z, r23
 230:	61 83       	std	Z+1, r22	; 0x01
 232:	52 83       	std	Z+2, r21	; 0x02
 234:	43 83       	std	Z+3, r20	; 0x03
 236:	34 83       	std	Z+4, r19	; 0x04
 238:	25 83       	std	Z+5, r18	; 0x05
 23a:	96 83       	std	Z+6, r25	; 0x06
 23c:	87 83       	std	Z+7, r24	; 0x07
            g_MainScheduler.run();
 23e:	cf 01       	movw	r24, r30
 240:	0e 94 1b 02 	call	0x436	; 0x436 <_ZN9Scheduler3runEv>
 244:	c3 cf       	rjmp	.-122    	; 0x1cc <main+0x80>

00000246 <__vector_16>:
	// - Re-enable interrupts
	sei();
}

ISR(TIMER0_OVF_vect)
{
 246:	1f 92       	push	r1
 248:	0f 92       	push	r0
 24a:	0f b6       	in	r0, 0x3f	; 63
 24c:	0f 92       	push	r0
 24e:	11 24       	eor	r1, r1
 250:	2f 93       	push	r18
 252:	3f 93       	push	r19
 254:	4f 93       	push	r20
 256:	5f 93       	push	r21
 258:	6f 93       	push	r22
 25a:	7f 93       	push	r23
 25c:	8f 93       	push	r24
 25e:	9f 93       	push	r25
 260:	af 93       	push	r26
 262:	bf 93       	push	r27
    // - Disable System interrupts
    cli();
 264:	f8 94       	cli
    // - Scale the interrupt for 1ms Tick
    if (INT_Counter < 4)
 266:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <INT_Counter>
 26a:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <INT_Counter+0x1>
 26e:	a0 91 78 01 	lds	r26, 0x0178	; 0x800178 <INT_Counter+0x2>
 272:	b0 91 79 01 	lds	r27, 0x0179	; 0x800179 <INT_Counter+0x3>
 276:	84 30       	cpi	r24, 0x04	; 4
 278:	91 05       	cpc	r25, r1
 27a:	a1 05       	cpc	r26, r1
 27c:	b1 05       	cpc	r27, r1
 27e:	60 f4       	brcc	.+24     	; 0x298 <__vector_16+0x52>
    {
        INT_Counter++;
 280:	01 96       	adiw	r24, 0x01	; 1
 282:	a1 1d       	adc	r26, r1
 284:	b1 1d       	adc	r27, r1
 286:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <INT_Counter>
 28a:	90 93 77 01 	sts	0x0177, r25	; 0x800177 <INT_Counter+0x1>
 28e:	a0 93 78 01 	sts	0x0178, r26	; 0x800178 <INT_Counter+0x2>
 292:	b0 93 79 01 	sts	0x0179, r27	; 0x800179 <INT_Counter+0x3>
 296:	2b c0       	rjmp	.+86     	; 0x2ee <__vector_16+0xa8>
    }
    else
    {
        // - Advance the global tick
        g_SystemTicks++;
 298:	20 91 49 03 	lds	r18, 0x0349	; 0x800349 <_ZL13g_SystemTicks>
 29c:	30 91 4a 03 	lds	r19, 0x034A	; 0x80034a <_ZL13g_SystemTicks+0x1>
 2a0:	40 91 4b 03 	lds	r20, 0x034B	; 0x80034b <_ZL13g_SystemTicks+0x2>
 2a4:	50 91 4c 03 	lds	r21, 0x034C	; 0x80034c <_ZL13g_SystemTicks+0x3>
 2a8:	60 91 4d 03 	lds	r22, 0x034D	; 0x80034d <_ZL13g_SystemTicks+0x4>
 2ac:	70 91 4e 03 	lds	r23, 0x034E	; 0x80034e <_ZL13g_SystemTicks+0x5>
 2b0:	80 91 4f 03 	lds	r24, 0x034F	; 0x80034f <_ZL13g_SystemTicks+0x6>
 2b4:	90 91 50 03 	lds	r25, 0x0350	; 0x800350 <_ZL13g_SystemTicks+0x7>
 2b8:	a1 e0       	ldi	r26, 0x01	; 1
 2ba:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <__adddi3_s8>
 2be:	20 93 49 03 	sts	0x0349, r18	; 0x800349 <_ZL13g_SystemTicks>
 2c2:	30 93 4a 03 	sts	0x034A, r19	; 0x80034a <_ZL13g_SystemTicks+0x1>
 2c6:	40 93 4b 03 	sts	0x034B, r20	; 0x80034b <_ZL13g_SystemTicks+0x2>
 2ca:	50 93 4c 03 	sts	0x034C, r21	; 0x80034c <_ZL13g_SystemTicks+0x3>
 2ce:	60 93 4d 03 	sts	0x034D, r22	; 0x80034d <_ZL13g_SystemTicks+0x4>
 2d2:	70 93 4e 03 	sts	0x034E, r23	; 0x80034e <_ZL13g_SystemTicks+0x5>
 2d6:	80 93 4f 03 	sts	0x034F, r24	; 0x80034f <_ZL13g_SystemTicks+0x6>
 2da:	90 93 50 03 	sts	0x0350, r25	; 0x800350 <_ZL13g_SystemTicks+0x7>
        INT_Counter = 0;
 2de:	10 92 76 01 	sts	0x0176, r1	; 0x800176 <INT_Counter>
 2e2:	10 92 77 01 	sts	0x0177, r1	; 0x800177 <INT_Counter+0x1>
 2e6:	10 92 78 01 	sts	0x0178, r1	; 0x800178 <INT_Counter+0x2>
 2ea:	10 92 79 01 	sts	0x0179, r1	; 0x800179 <INT_Counter+0x3>
    }
    sei();
 2ee:	78 94       	sei

}
 2f0:	bf 91       	pop	r27
 2f2:	af 91       	pop	r26
 2f4:	9f 91       	pop	r25
 2f6:	8f 91       	pop	r24
 2f8:	7f 91       	pop	r23
 2fa:	6f 91       	pop	r22
 2fc:	5f 91       	pop	r21
 2fe:	4f 91       	pop	r20
 300:	3f 91       	pop	r19
 302:	2f 91       	pop	r18
 304:	0f 90       	pop	r0
 306:	0f be       	out	0x3f, r0	; 63
 308:	0f 90       	pop	r0
 30a:	1f 90       	pop	r1
 30c:	18 95       	reti

0000030e <_GLOBAL__sub_I__ZN4Task14m_u8NextTaskIDE>:
// ##########################
// Global/Static declarations
// ##########################
uint8_t Task::m_u8NextTaskID = 0; // - Init task ID
volatile static SchedulerTypes::UInt64 g_SystemTicks = 0; // - The system counter.
Scheduler g_MainScheduler; // - Instantiate a Scheduler
 30e:	8a e7       	ldi	r24, 0x7A	; 122
 310:	91 e0       	ldi	r25, 0x01	; 1
 312:	0e 94 8c 01 	call	0x318	; 0x318 <_ZN9SchedulerC1Ev>
 316:	08 95       	ret

00000318 <_ZN9SchedulerC1Ev>:

SchedulerTypes::ErrorCodes Scheduler::SortScheduleByPriority(Task * i_pSchedule)
{
    //TODO
    return(SchedulerTypes::NO_ERR);
}
 318:	cf 93       	push	r28
 31a:	df 93       	push	r29
 31c:	ec 01       	movw	r28, r24
 31e:	88 e0       	ldi	r24, 0x08	; 8
 320:	88 87       	std	Y+8, r24	; 0x08
 322:	19 86       	std	Y+9, r1	; 0x09
 324:	0e 94 96 00 	call	0x12c	; 0x12c <_ZN7Mailbox10getMailboxEv>
 328:	fe 01       	movw	r30, r28
 32a:	e3 53       	subi	r30, 0x33	; 51
 32c:	fe 4f       	sbci	r31, 0xFE	; 254
 32e:	91 83       	std	Z+1, r25	; 0x01
 330:	80 83       	st	Z, r24
 332:	fe 01       	movw	r30, r28
 334:	ce 01       	movw	r24, r28
 336:	80 52       	subi	r24, 0x20	; 32
 338:	9f 4f       	sbci	r25, 0xFF	; 255
 33a:	14 86       	std	Z+12, r1	; 0x0c
 33c:	13 86       	std	Z+11, r1	; 0x0b
 33e:	7c 96       	adiw	r30, 0x1c	; 28
 340:	e8 17       	cp	r30, r24
 342:	f9 07       	cpc	r31, r25
 344:	d1 f7       	brne	.-12     	; 0x33a <_ZN9SchedulerC1Ev+0x22>
 346:	df 91       	pop	r29
 348:	cf 91       	pop	r28
 34a:	08 95       	ret

0000034c <_ZN9Scheduler6attachEP4Task8TaskType10TaskActivey>:
 34c:	6f 92       	push	r6
 34e:	7f 92       	push	r7
 350:	8f 92       	push	r8
 352:	9f 92       	push	r9
 354:	af 92       	push	r10
 356:	bf 92       	push	r11
 358:	cf 92       	push	r12
 35a:	df 92       	push	r13
 35c:	ef 92       	push	r14
 35e:	ff 92       	push	r15
 360:	0f 93       	push	r16
 362:	1f 93       	push	r17
 364:	cf 93       	push	r28
 366:	df 93       	push	r29
 368:	dc 01       	movw	r26, r24
 36a:	18 96       	adiw	r26, 0x08	; 8
 36c:	8c 91       	ld	r24, X
 36e:	18 97       	sbiw	r26, 0x08	; 8
 370:	88 23       	and	r24, r24
 372:	09 f4       	brne	.+2      	; 0x376 <_ZN9Scheduler6attachEP4Task8TaskType10TaskActivey+0x2a>
 374:	50 c0       	rjmp	.+160    	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 376:	19 96       	adiw	r26, 0x09	; 9
 378:	8c 91       	ld	r24, X
 37a:	19 97       	sbiw	r26, 0x09	; 9
 37c:	88 30       	cpi	r24, 0x08	; 8
 37e:	08 f0       	brcs	.+2      	; 0x382 <_ZN9Scheduler6attachEP4Task8TaskType10TaskActivey+0x36>
 380:	4a c0       	rjmp	.+148    	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 382:	7c 90       	ld	r7, X
 384:	11 96       	adiw	r26, 0x01	; 1
 386:	8c 90       	ld	r8, X
 388:	11 97       	sbiw	r26, 0x01	; 1
 38a:	12 96       	adiw	r26, 0x02	; 2
 38c:	9c 90       	ld	r9, X
 38e:	12 97       	sbiw	r26, 0x02	; 2
 390:	13 96       	adiw	r26, 0x03	; 3
 392:	dc 91       	ld	r29, X
 394:	13 97       	sbiw	r26, 0x03	; 3
 396:	14 96       	adiw	r26, 0x04	; 4
 398:	cc 91       	ld	r28, X
 39a:	14 97       	sbiw	r26, 0x04	; 4
 39c:	15 96       	adiw	r26, 0x05	; 5
 39e:	5c 91       	ld	r21, X
 3a0:	15 97       	sbiw	r26, 0x05	; 5
 3a2:	16 96       	adiw	r26, 0x06	; 6
 3a4:	3c 91       	ld	r19, X
 3a6:	16 97       	sbiw	r26, 0x06	; 6
 3a8:	17 96       	adiw	r26, 0x07	; 7
 3aa:	6c 90       	ld	r6, X
 3ac:	17 97       	sbiw	r26, 0x07	; 7
 3ae:	fd 01       	movw	r30, r26
 3b0:	9c e1       	ldi	r25, 0x1C	; 28
 3b2:	89 9f       	mul	r24, r25
 3b4:	e0 0d       	add	r30, r0
 3b6:	f1 1d       	adc	r31, r1
 3b8:	11 24       	eor	r1, r1
 3ba:	3b 96       	adiw	r30, 0x0b	; 11
 3bc:	71 83       	std	Z+1, r23	; 0x01
 3be:	60 83       	st	Z, r22
 3c0:	42 83       	std	Z+2, r20	; 0x02
 3c2:	81 e0       	ldi	r24, 0x01	; 1
 3c4:	21 11       	cpse	r18, r1
 3c6:	01 c0       	rjmp	.+2      	; 0x3ca <_ZN9Scheduler6attachEP4Task8TaskType10TaskActivey+0x7e>
 3c8:	80 e0       	ldi	r24, 0x00	; 0
 3ca:	83 83       	std	Z+3, r24	; 0x03
 3cc:	14 82       	std	Z+4, r1	; 0x04
 3ce:	15 82       	std	Z+5, r1	; 0x05
 3d0:	16 82       	std	Z+6, r1	; 0x06
 3d2:	17 82       	std	Z+7, r1	; 0x07
 3d4:	10 86       	std	Z+8, r1	; 0x08
 3d6:	11 86       	std	Z+9, r1	; 0x09
 3d8:	12 86       	std	Z+10, r1	; 0x0a
 3da:	13 86       	std	Z+11, r1	; 0x0b
 3dc:	74 86       	std	Z+12, r7	; 0x0c
 3de:	85 86       	std	Z+13, r8	; 0x0d
 3e0:	96 86       	std	Z+14, r9	; 0x0e
 3e2:	d7 87       	std	Z+15, r29	; 0x0f
 3e4:	c0 8b       	std	Z+16, r28	; 0x10
 3e6:	51 8b       	std	Z+17, r21	; 0x11
 3e8:	32 8b       	std	Z+18, r19	; 0x12
 3ea:	63 8a       	std	Z+19, r6	; 0x13
 3ec:	a4 8a       	std	Z+20, r10	; 0x14
 3ee:	b5 8a       	std	Z+21, r11	; 0x15
 3f0:	c6 8a       	std	Z+22, r12	; 0x16
 3f2:	d7 8a       	std	Z+23, r13	; 0x17
 3f4:	e0 8e       	std	Z+24, r14	; 0x18
 3f6:	f1 8e       	std	Z+25, r15	; 0x19
 3f8:	02 8f       	std	Z+26, r16	; 0x1a
 3fa:	13 8f       	std	Z+27, r17	; 0x1b
 3fc:	18 96       	adiw	r26, 0x08	; 8
 3fe:	8c 91       	ld	r24, X
 400:	18 97       	sbiw	r26, 0x08	; 8
 402:	81 50       	subi	r24, 0x01	; 1
 404:	18 96       	adiw	r26, 0x08	; 8
 406:	8c 93       	st	X, r24
 408:	18 97       	sbiw	r26, 0x08	; 8
 40a:	19 96       	adiw	r26, 0x09	; 9
 40c:	8c 91       	ld	r24, X
 40e:	19 97       	sbiw	r26, 0x09	; 9
 410:	8f 5f       	subi	r24, 0xFF	; 255
 412:	19 96       	adiw	r26, 0x09	; 9
 414:	8c 93       	st	X, r24
 416:	80 e0       	ldi	r24, 0x00	; 0
 418:	df 91       	pop	r29
 41a:	cf 91       	pop	r28
 41c:	1f 91       	pop	r17
 41e:	0f 91       	pop	r16
 420:	ff 90       	pop	r15
 422:	ef 90       	pop	r14
 424:	df 90       	pop	r13
 426:	cf 90       	pop	r12
 428:	bf 90       	pop	r11
 42a:	af 90       	pop	r10
 42c:	9f 90       	pop	r9
 42e:	8f 90       	pop	r8
 430:	7f 90       	pop	r7
 432:	6f 90       	pop	r6
 434:	08 95       	ret

00000436 <_ZN9Scheduler3runEv>:
 436:	6f 92       	push	r6
 438:	7f 92       	push	r7
 43a:	8f 92       	push	r8
 43c:	9f 92       	push	r9
 43e:	af 92       	push	r10
 440:	bf 92       	push	r11
 442:	cf 92       	push	r12
 444:	df 92       	push	r13
 446:	ef 92       	push	r14
 448:	ff 92       	push	r15
 44a:	0f 93       	push	r16
 44c:	1f 93       	push	r17
 44e:	cf 93       	push	r28
 450:	df 93       	push	r29
 452:	dc 01       	movw	r26, r24
 454:	1b 96       	adiw	r26, 0x0b	; 11
 456:	0d 91       	ld	r16, X+
 458:	1c 91       	ld	r17, X
 45a:	1c 97       	sbiw	r26, 0x0c	; 12
 45c:	01 15       	cp	r16, r1
 45e:	11 05       	cpc	r17, r1
 460:	09 f4       	brne	.+2      	; 0x464 <_ZN9Scheduler3runEv+0x2e>
 462:	65 c0       	rjmp	.+202    	; 0x52e <_ZN9Scheduler3runEv+0xf8>
 464:	ec 01       	movw	r28, r24
 466:	3c 01       	movw	r6, r24
 468:	b4 ec       	ldi	r27, 0xC4	; 196
 46a:	6b 0e       	add	r6, r27
 46c:	71 1c       	adc	r7, r1
 46e:	07 c0       	rjmp	.+14     	; 0x47e <_ZN9Scheduler3runEv+0x48>
 470:	6c 96       	adiw	r28, 0x1c	; 28
 472:	0b 85       	ldd	r16, Y+11	; 0x0b
 474:	1c 85       	ldd	r17, Y+12	; 0x0c
 476:	01 15       	cp	r16, r1
 478:	11 05       	cpc	r17, r1
 47a:	09 f4       	brne	.+2      	; 0x47e <_ZN9Scheduler3runEv+0x48>
 47c:	58 c0       	rjmp	.+176    	; 0x52e <_ZN9Scheduler3runEv+0xf8>
 47e:	4e 01       	movw	r8, r28
 480:	8e 85       	ldd	r24, Y+14	; 0x0e
 482:	88 23       	and	r24, r24
 484:	09 f4       	brne	.+2      	; 0x488 <_ZN9Scheduler3runEv+0x52>
 486:	4f c0       	rjmp	.+158    	; 0x526 <_ZN9Scheduler3runEv+0xf0>
 488:	2f 85       	ldd	r18, Y+15	; 0x0f
 48a:	38 89       	ldd	r19, Y+16	; 0x10
 48c:	49 89       	ldd	r20, Y+17	; 0x11
 48e:	5a 89       	ldd	r21, Y+18	; 0x12
 490:	6b 89       	ldd	r22, Y+19	; 0x13
 492:	7c 89       	ldd	r23, Y+20	; 0x14
 494:	8d 89       	ldd	r24, Y+21	; 0x15
 496:	9e 89       	ldd	r25, Y+22	; 0x16
 498:	a0 e0       	ldi	r26, 0x00	; 0
 49a:	0e 94 f6 02 	call	0x5ec	; 0x5ec <__cmpdi2_s8>
 49e:	41 f4       	brne	.+16     	; 0x4b0 <_ZN9Scheduler3runEv+0x7a>
 4a0:	d8 01       	movw	r26, r16
 4a2:	ed 91       	ld	r30, X+
 4a4:	fc 91       	ld	r31, X
 4a6:	01 90       	ld	r0, Z+
 4a8:	f0 81       	ld	r31, Z
 4aa:	e0 2d       	mov	r30, r0
 4ac:	c8 01       	movw	r24, r16
 4ae:	09 95       	icall
 4b0:	f4 01       	movw	r30, r8
 4b2:	85 85       	ldd	r24, Z+13	; 0x0d
 4b4:	81 30       	cpi	r24, 0x01	; 1
 4b6:	29 f0       	breq	.+10     	; 0x4c2 <_ZN9Scheduler3runEv+0x8c>
 4b8:	18 f0       	brcs	.+6      	; 0x4c0 <_ZN9Scheduler3runEv+0x8a>
 4ba:	82 30       	cpi	r24, 0x02	; 2
 4bc:	61 f0       	breq	.+24     	; 0x4d6 <_ZN9Scheduler3runEv+0xa0>
 4be:	33 c0       	rjmp	.+102    	; 0x526 <_ZN9Scheduler3runEv+0xf0>
 4c0:	16 86       	std	Z+14, r1	; 0x0e
 4c2:	f4 01       	movw	r30, r8
 4c4:	17 86       	std	Z+15, r1	; 0x0f
 4c6:	10 8a       	std	Z+16, r1	; 0x10
 4c8:	11 8a       	std	Z+17, r1	; 0x11
 4ca:	12 8a       	std	Z+18, r1	; 0x12
 4cc:	13 8a       	std	Z+19, r1	; 0x13
 4ce:	14 8a       	std	Z+20, r1	; 0x14
 4d0:	15 8a       	std	Z+21, r1	; 0x15
 4d2:	16 8a       	std	Z+22, r1	; 0x16
 4d4:	28 c0       	rjmp	.+80     	; 0x526 <_ZN9Scheduler3runEv+0xf0>
 4d6:	27 85       	ldd	r18, Z+15	; 0x0f
 4d8:	30 89       	ldd	r19, Z+16	; 0x10
 4da:	41 89       	ldd	r20, Z+17	; 0x11
 4dc:	52 89       	ldd	r21, Z+18	; 0x12
 4de:	63 89       	ldd	r22, Z+19	; 0x13
 4e0:	74 89       	ldd	r23, Z+20	; 0x14
 4e2:	85 89       	ldd	r24, Z+21	; 0x15
 4e4:	96 89       	ldd	r25, Z+22	; 0x16
 4e6:	a1 e0       	ldi	r26, 0x01	; 1
 4e8:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <__adddi3_s8>
 4ec:	f4 01       	movw	r30, r8
 4ee:	27 87       	std	Z+15, r18	; 0x0f
 4f0:	30 8b       	std	Z+16, r19	; 0x10
 4f2:	41 8b       	std	Z+17, r20	; 0x11
 4f4:	52 8b       	std	Z+18, r21	; 0x12
 4f6:	63 8b       	std	Z+19, r22	; 0x13
 4f8:	74 8b       	std	Z+20, r23	; 0x14
 4fa:	85 8b       	std	Z+21, r24	; 0x15
 4fc:	96 8b       	std	Z+22, r25	; 0x16
 4fe:	a7 8c       	ldd	r10, Z+31	; 0x1f
 500:	b0 a0       	ldd	r11, Z+32	; 0x20
 502:	c1 a0       	ldd	r12, Z+33	; 0x21
 504:	d2 a0       	ldd	r13, Z+34	; 0x22
 506:	e3 a0       	ldd	r14, Z+35	; 0x23
 508:	f4 a0       	ldd	r15, Z+36	; 0x24
 50a:	05 a1       	ldd	r16, Z+37	; 0x25
 50c:	16 a1       	ldd	r17, Z+38	; 0x26
 50e:	0e 94 ed 02 	call	0x5da	; 0x5da <__cmpdi2>
 512:	49 f0       	breq	.+18     	; 0x526 <_ZN9Scheduler3runEv+0xf0>
 514:	40 f0       	brcs	.+16     	; 0x526 <_ZN9Scheduler3runEv+0xf0>
 516:	17 86       	std	Z+15, r1	; 0x0f
 518:	10 8a       	std	Z+16, r1	; 0x10
 51a:	11 8a       	std	Z+17, r1	; 0x11
 51c:	12 8a       	std	Z+18, r1	; 0x12
 51e:	13 8a       	std	Z+19, r1	; 0x13
 520:	14 8a       	std	Z+20, r1	; 0x14
 522:	15 8a       	std	Z+21, r1	; 0x15
 524:	16 8a       	std	Z+22, r1	; 0x16
 526:	c6 15       	cp	r28, r6
 528:	d7 05       	cpc	r29, r7
 52a:	09 f0       	breq	.+2      	; 0x52e <_ZN9Scheduler3runEv+0xf8>
 52c:	a1 cf       	rjmp	.-190    	; 0x470 <_ZN9Scheduler3runEv+0x3a>
 52e:	80 e0       	ldi	r24, 0x00	; 0
 530:	df 91       	pop	r29
 532:	cf 91       	pop	r28
 534:	1f 91       	pop	r17
 536:	0f 91       	pop	r16
 538:	ff 90       	pop	r15
 53a:	ef 90       	pop	r14
 53c:	df 90       	pop	r13
 53e:	cf 90       	pop	r12
 540:	bf 90       	pop	r11
 542:	af 90       	pop	r10
 544:	9f 90       	pop	r9
 546:	8f 90       	pop	r8
 548:	7f 90       	pop	r7
 54a:	6f 90       	pop	r6
 54c:	08 95       	ret

0000054e <_ZN9Scheduler5setupEv>:
 54e:	0f 93       	push	r16
 550:	1f 93       	push	r17
 552:	cf 93       	push	r28
 554:	df 93       	push	r29
 556:	ec 01       	movw	r28, r24
 558:	8c 01       	movw	r16, r24
 55a:	00 52       	subi	r16, 0x20	; 32
 55c:	1f 4f       	sbci	r17, 0xFF	; 255
 55e:	8b 85       	ldd	r24, Y+11	; 0x0b
 560:	9c 85       	ldd	r25, Y+12	; 0x0c
 562:	00 97       	sbiw	r24, 0x00	; 0
 564:	39 f0       	breq	.+14     	; 0x574 <_ZN9Scheduler5setupEv+0x26>
 566:	dc 01       	movw	r26, r24
 568:	ed 91       	ld	r30, X+
 56a:	fc 91       	ld	r31, X
 56c:	02 80       	ldd	r0, Z+2	; 0x02
 56e:	f3 81       	ldd	r31, Z+3	; 0x03
 570:	e0 2d       	mov	r30, r0
 572:	09 95       	icall
 574:	6c 96       	adiw	r28, 0x1c	; 28
 576:	c0 17       	cp	r28, r16
 578:	d1 07       	cpc	r29, r17
 57a:	89 f7       	brne	.-30     	; 0x55e <_ZN9Scheduler5setupEv+0x10>
 57c:	80 e0       	ldi	r24, 0x00	; 0
 57e:	df 91       	pop	r29
 580:	cf 91       	pop	r28
 582:	1f 91       	pop	r17
 584:	0f 91       	pop	r16
 586:	08 95       	ret

00000588 <_ZN9Scheduler5SleepEv>:
// *****************************
//         PORT_ME
// *****************************
void Scheduler::Sleep()
{
   sleep_enable();
 588:	83 b7       	in	r24, 0x33	; 51
 58a:	81 60       	ori	r24, 0x01	; 1
 58c:	83 bf       	out	0x33, r24	; 51
 58e:	08 95       	ret

00000590 <_ZN4Task3runEv>:
class Task
{
	public:
		        Task();
		        SchedulerTypes::UInt8   m_u8TaskID;
		virtual SchedulerTypes::ErrorCodes  run(void){return(SchedulerTypes::NO_ERR);};
 590:	80 e0       	ldi	r24, 0x00	; 0
 592:	08 95       	ret

00000594 <_ZN4Task5setupEv>:
		virtual SchedulerTypes::ErrorCodes  setup(void){return(SchedulerTypes::NO_ERR);};
 594:	80 e0       	ldi	r24, 0x00	; 0
 596:	08 95       	ret

00000598 <_ZN4TaskC1Ev>:
#include "Task.hpp"

Task::Task()
 598:	cf 93       	push	r28
 59a:	df 93       	push	r29
 59c:	ec 01       	movw	r28, r24
 59e:	8e e0       	ldi	r24, 0x0E	; 14
 5a0:	91 e0       	ldi	r25, 0x01	; 1
 5a2:	99 83       	std	Y+1, r25	; 0x01
 5a4:	88 83       	st	Y, r24
{
    m_u8TaskID = m_u8NextTaskID;
 5a6:	80 91 51 03 	lds	r24, 0x0351	; 0x800351 <_ZN4Task14m_u8NextTaskIDE>
 5aa:	8a 83       	std	Y+2, r24	; 0x02
    m_u8NextTaskID++;
 5ac:	8f 5f       	subi	r24, 0xFF	; 255
 5ae:	80 93 51 03 	sts	0x0351, r24	; 0x800351 <_ZN4Task14m_u8NextTaskIDE>
    m_bIsFinished = false;
 5b2:	1e 82       	std	Y+6, r1	; 0x06
    m_pMailbox = Mailbox::getMailbox();
 5b4:	0e 94 96 00 	call	0x12c	; 0x12c <_ZN7Mailbox10getMailboxEv>
 5b8:	9d 83       	std	Y+5, r25	; 0x05
 5ba:	8c 83       	std	Y+4, r24	; 0x04
}
 5bc:	df 91       	pop	r29
 5be:	cf 91       	pop	r28
 5c0:	08 95       	ret

000005c2 <__adddi3_s8>:
 5c2:	00 24       	eor	r0, r0
 5c4:	a7 fd       	sbrc	r26, 7
 5c6:	00 94       	com	r0
 5c8:	2a 0f       	add	r18, r26
 5ca:	30 1d       	adc	r19, r0
 5cc:	40 1d       	adc	r20, r0
 5ce:	50 1d       	adc	r21, r0
 5d0:	60 1d       	adc	r22, r0
 5d2:	70 1d       	adc	r23, r0
 5d4:	80 1d       	adc	r24, r0
 5d6:	90 1d       	adc	r25, r0
 5d8:	08 95       	ret

000005da <__cmpdi2>:
 5da:	2a 15       	cp	r18, r10
 5dc:	3b 05       	cpc	r19, r11
 5de:	4c 05       	cpc	r20, r12
 5e0:	5d 05       	cpc	r21, r13
 5e2:	6e 05       	cpc	r22, r14
 5e4:	7f 05       	cpc	r23, r15
 5e6:	80 07       	cpc	r24, r16
 5e8:	91 07       	cpc	r25, r17
 5ea:	08 95       	ret

000005ec <__cmpdi2_s8>:
 5ec:	00 24       	eor	r0, r0
 5ee:	a7 fd       	sbrc	r26, 7
 5f0:	00 94       	com	r0
 5f2:	2a 17       	cp	r18, r26
 5f4:	30 05       	cpc	r19, r0
 5f6:	40 05       	cpc	r20, r0
 5f8:	50 05       	cpc	r21, r0
 5fa:	60 05       	cpc	r22, r0
 5fc:	70 05       	cpc	r23, r0
 5fe:	80 05       	cpc	r24, r0
 600:	90 05       	cpc	r25, r0
 602:	08 95       	ret

00000604 <__tablejump2__>:
 604:	ee 0f       	add	r30, r30
 606:	ff 1f       	adc	r31, r31
 608:	05 90       	lpm	r0, Z+
 60a:	f4 91       	lpm	r31, Z
 60c:	e0 2d       	mov	r30, r0
 60e:	09 94       	ijmp

00000610 <_exit>:
 610:	f8 94       	cli

00000612 <__stop_program>:
 612:	ff cf       	rjmp	.-2      	; 0x612 <__stop_program>
